syntax = "proto3";

option objc_class_prefix = "HLW";

package nfs;

// The service definitions.
service NFS {
  rpc NFSPROC_READ(READargs) returns (READres) {}
}

// The message definitions.
message nfs_fh {
  string data = 1;
}

message fattr {
  enum ftype {
    NFSREG = 0;
    NFSDIR = 1;
    NFSBLK = 2;
    NFSCHR = 3;
    NFSLNK = 4;
    NFSSOCK = 5;
    NFSFIFO = 6;
  }
  ftype   type = 1;
  uint64  size = 2;   // the size of the file in bytes.
  uint64  used = 3;   // the actual disk space used for storing the file.
  uint64  fsid = 4;   // file system identifier.
  uint64  fileid = 5; // inode number of the file in the file system.
  uint64  atime = 6;  // timestamp when the file was last accessed.
  uint64  mtime = 7;  // timestamp when the file contents were last modified.
  uint64  ctime = 8;  // timestamp when the attributes of file were last changed.
}

message READargs {
  nfs_fh file = 1;
  uint64 offset = 2;
  uint64 count = 3;
}

message READresok {
  fattr   file_attributes = 1; // fattr directly used instead of post_op_attr.
  uint64  count = 2;
  bool    eof = 3;
  string  data = 4;
}

message READresfail {
  fattr file_attributes = 1; // fattr directly used instead of post_op_attr.
}

message READres {
  oneof READrestype {
    READresok   resok = 1;
    READresfail resfail = 2;
  }
}
